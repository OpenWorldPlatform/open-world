/*
 * OpenWorldPlatform mgmt service
 *
 * OpenWorldPlatform mgmt
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// AddProject - 
func (s *DefaultApiService) AddProject(ctx context.Context, project Project) (ImplResponse, error) {
	// TODO - update AddProject with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Project{}) or use other options such as http.Ok ...
	//return Response(200, Project{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddProject method not implemented")
}

// AddUser - 
func (s *DefaultApiService) AddUser(ctx context.Context, user User) (ImplResponse, error) {
	// TODO - update AddUser with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddUser method not implemented")
}

// GetProjectById - 
func (s *DefaultApiService) GetProjectById(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetProjectById with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Project{}) or use other options such as http.Ok ...
	//return Response(200, Project{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetProjectById method not implemented")
}

// Index - 
func (s *DefaultApiService) Index(ctx context.Context) (ImplResponse, error) {
	// TODO - update Index with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Index{}) or use other options such as http.Ok ...
	//return Response(200, Index{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Index method not implemented")
}
